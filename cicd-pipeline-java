pipeline
{
agent any
stages
{
stage('Checkout SCM')
{
steps
{
git credentialsId: 'GITHUB_CREDENTIALS', url: 'https://github.com/yuvaraj3115/java_project.git'
}
}
stage('build code from maven')
{
steps
{
 sh 'mvn install'
}
}
stage('create artifacts as docker image')
{
steps
{
sh 'docker build -t yuvarajnbkr2015/sonata1:myproj1.0 -f myproj-dockerfile .'
}
}
stage('push newly created image into docker registry')
{
steps
{
withCredentials([string(credentialsId: 'DOCKERHUB_PASSWORD', variable: 'DOCKERHUB_CREDENTIALS')])  
{
    sh "docker login -u yuvarajnbkr2015 -p ${DOCKERHUB_CRDENTIALS}"
}
    sh "docker push yuvarajnbkr2015/sonata1:myproj1.0"
}
}
stage('execute ansible playbook on dev env')
{
steps
{
script
{
if("${params.select_env}" == "dev")
{
ansiblePlaybook credentialsId: '42943a63-e3c0-4075-a2a2-687d4628b4aa', installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: '/var/lib/jenkins/workspace/sonata_project/deploy.yml', skippedTags: 'qa,prod'
}
}
stage('execute ansible playbook on qa env')
{
steps
{
script
{
if("${params.select_env}" == "qa")
{
ansiblePlaybook credentialsId: '42943a63-e3c0-4075-a2a2-687d4628b4aa', installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: '/var/lib/jenkins/workspace/sonata_project/deploy.yml', skippedTags: 'dev,prod'
}
}
}
}
stage('execute ansible playbook on prod env')
{
steps
{
script
{
if("${params.select_env}" == "prod")
{
ansiblePlaybook credentialsId: '42943a63-e3c0-4075-a2a2-687d4628b4aa', installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: '/var/lib/jenkins/workspace/sonata_project/deploy.yml', skippedTags: 'dev,qa'
}
}
}
}
}
}


